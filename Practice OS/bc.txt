int i, j, k=0, flag;
	int finish[10], safe_seq[10];

	for(i=0; i<np; i++)
	{
		finish[i] = 0;
	}

	for(i=0; i<np; i++)
	{
		flag=0;
		if(finish[i] == 0)
		{
			for(j=0; j<nr; j++)
			{
				if(need[i][j]>avail[j])
				{
					flag=1;
					break;
				}
			}
		
			if(flag == 0){
				finish[i] = 1;
				safe_seq[k] = i;
				printf("\nProcess%d has entered the safe sequence", i);
				k++;

				for(j=0; j<nr; j++)
				{
					avail[j]+= allocation[i][j];
				}
				i=-1;
			}
		}
	}
	
	flag = 0;
	for(i=0; i<np; i++){
		if(finish[i] == 0){
			printf("\nThe System is in deadlock.");
			flag=1;
			break;
		}
	}

	if(flag == 0){
		printf("\nThe System is in safe state & the safe sequence is -->");
		for(i=0; i<np; i++){
			printf(" P%d", safe_seq[i]);
		}
	}